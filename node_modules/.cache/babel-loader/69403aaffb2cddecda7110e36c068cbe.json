{"ast":null,"code":"import _toConsumableArray from \"/Users/dzakharov/Desktop/code/clickygame/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/dzakharov/Desktop/code/clickygame/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dzakharov/Desktop/code/clickygame/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dzakharov/Desktop/code/clickygame/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dzakharov/Desktop/code/clickygame/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dzakharov/Desktop/code/clickygame/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dzakharov/Desktop/code/clickygame/src/pages/Game.js\";\nimport React, { Component } from \"react\";\nimport Card from \"../components/Card\";\n\nvar Game =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Game, _Component);\n\n  function Game() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Game)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      image_id: [{\n        index: 0,\n        clicked: false\n      }, {\n        index: 1,\n        clicked: false\n      }, {\n        index: 2,\n        clicked: false\n      }, {\n        index: 3,\n        clicked: false\n      }, {\n        index: 4,\n        clicked: false\n      }, {\n        index: 5,\n        clicked: false\n      }, {\n        index: 6,\n        clicked: false\n      }, {\n        index: 7,\n        clicked: false\n      }, {\n        index: 8,\n        clicked: false\n      }, {\n        index: 9,\n        clicked: false\n      }, {\n        index: 10,\n        clicked: false\n      }, {\n        index: 11,\n        clicked: false\n      }, {\n        index: 12,\n        clicked: false\n      }, {\n        index: 13,\n        clicked: false\n      }, {\n        index: 14,\n        clicked: false\n      }, {\n        index: 15,\n        clicked: false\n      }, {\n        index: 16,\n        clicked: false\n      }, {\n        index: 17,\n        clicked: false\n      }],\n      score: 0,\n      topScore: 0,\n      message: \"Click on image to begin!\"\n    };\n\n    _this.handleBtnClick = function (event, i) {\n      console.log(\"here's i:\");\n      console.log(i);\n      console.log(\"this.state.image_id[i].clicked:\");\n      console.log(_this.state.image_id[i].clicked);\n\n      if (_this.state.image_id[i].clicked === false) {\n        _this.setState({\n          score: _this.state.score + 1\n        });\n\n        _this.updateItem(i, true);\n\n        _this.setState({\n          message: \"You guessed correctly!\"\n        });\n      } else {\n        console.log(\"You clicked twice on the same image. You lost!\");\n        if (_this.state.score > _this.state.topScore) _this.setState({\n          topScore: _this.state.score\n        });\n\n        _this.setState({\n          score: 0\n        });\n\n        _this.setState({\n          message: \"You clicked on this image twice. You lost!\"\n        });\n\n        _this.resetImageArray();\n      } //     // Get the data-value of the clicked button\n      //     const btnType = event.target.attributes.getNamedItem(\"data-value\").value;\n      //     // Clone this.state to the newState object\n      //     // We'll modify this object and use it to set our component's state\n      //     const newState = { ...this.state };\n      //     if (btnType === \"pick\") {\n      //       // Set newState.match to either true or false depending on whether or not the dog likes us (1/5 chance)\n      //       newState.match = 1 === Math.floor(Math.random() * 5) + 1;\n      //       // Set newState.matchCount equal to its current value or its current value + 1 depending on whether the dog likes us\n      //       newState.matchCount = newState.match\n      //         ? newState.matchCount + 1\n      //         : newState.matchCount;\n      //     } else {\n      //       // If we thumbs down'ed the dog, we haven't matched with it\n      //       newState.match = false;\n      //     }\n      //     // Replace our component's state with newState, load the next dog image\n      //     this.setState(newState);\n      //     this.loadNextDog();\n\n    };\n\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"componentDidMount\",\n    // When the component mounts, load the next dog to be displayed\n    value: function componentDidMount() {//this.loadNextDog();\n    }\n  }, {\n    key: \"updateItem\",\n    value: function updateItem(id, itemAttributes) {\n      //var index = this.state.image_id.findIndex(x=> x.id === id);\n      if (id === -1) {} else {\n        console.log(\"Flipping from \" + this.state.image_id[id].clicked + \" to \" + itemAttributes);\n        console.log(this.state.image_id.slice(0, id));\n        console.log(this.state.image_id.slice(id + 1));\n        this.setState({\n          image_id: [].concat(_toConsumableArray(this.state.image_id.slice(0, id)), [Object.assign({\n            index: this.state.image_id[id].index,\n            clicked: itemAttributes\n          })], _toConsumableArray(this.state.image_id.slice(id + 1)))\n        });\n      }\n\n      console.log(\"this.state.image_id array looks like this now:\");\n\n      for (var i = 0; i < this.state.image_id.length; i++) {\n        console.log(this.state.image_id[i].clicked);\n      }\n    }\n  }, {\n    key: \"resetImageArray\",\n    value: function resetImageArray() {\n      for (var i = 0; i < this.state.image_id.length; i++) {\n        this.updateItem(i, false);\n      } // console.log(\"this.state.image_id array looks like this now:\");\n      // for (let i=0; i<this.state.image_id.length; i++) {    \n      //   console.log(this.state.image_id[i].clicked);\n      // }\n\n    }\n  }, {\n    key: \"shuffle\",\n    //   loadNextDog = () => {\n    //     API.getRandomDog()\n    //       .then(res =>\n    //         this.setState({\n    //           image: res.data.message\n    //         })\n    //       )\n    //       .catch(err => console.log(err));\n    //   };\n    value: function shuffle(a) {\n      for (var i = a.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var _ref = [a[j], a[i]];\n        a[i] = _ref[0];\n        a[j] = _ref[1];\n      }\n\n      return a;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var new_image_id = this.shuffle(this.state.image_id); //this.setState({image_id: new_image_id});\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Clicky Game!\"), React.createElement(\"h3\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Click on an image to earn points, but don't click on any more than once!\"), React.createElement(\"div\", {\n        className: \"text-center\",\n        id: \"messaging_div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, this.state.message)), React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Score: \", this.state.score, \" Top score: \", this.state.topScore), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Card, {\n        image_id: new_image_id[0].index,\n        handleBtnClick: function handleBtnClick(e) {\n          _this2.handleBtnClick(e, 0);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-xs-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-xs-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Card, {\n        image_id: new_image_id[1].index,\n        handleBtnClick: function handleBtnClick(e) {\n          _this2.handleBtnClick(e, 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-xs-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-xs-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Card, {\n        image_id: new_image_id[2].index,\n        handleBtnClick: function handleBtnClick(e) {\n          _this2.handleBtnClick(e, 2);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-xs-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-xs-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Card, {\n        image_id: new_image_id[3].index,\n        handleBtnClick: function handleBtnClick(e) {\n          _this2.handleBtnClick(e, 3);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-xs-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-xs-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Card, {\n        image_id: new_image_id[4].index,\n        handleBtnClick: function handleBtnClick(e) {\n          _this2.handleBtnClick(e, 4);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-xs-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-xs-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Card, {\n        image_id: new_image_id[5].index,\n        handleBtnClick: function handleBtnClick(e) {\n          _this2.handleBtnClick(e, 5);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-xs-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Game;\n}(Component);\n\nexport default Game;","map":{"version":3,"sources":["/Users/dzakharov/Desktop/code/clickygame/src/pages/Game.js"],"names":["React","Component","Card","Game","state","image_id","index","clicked","score","topScore","message","handleBtnClick","event","i","console","log","setState","updateItem","resetImageArray","id","itemAttributes","slice","Object","assign","length","a","j","Math","floor","random","new_image_id","shuffle","e"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;IAEMC,I;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,CAAC;AAACC,QAAAA,KAAK,EAAE,CAAR;AAAWC,QAAAA,OAAO,EAAE;AAApB,OAAD,EAA6B;AAACD,QAAAA,KAAK,EAAE,CAAR;AAAWC,QAAAA,OAAO,EAAE;AAApB,OAA7B,EAA0D;AAACD,QAAAA,KAAK,EAAE,CAAR;AAAWC,QAAAA,OAAO,EAAE;AAApB,OAA1D,EACC;AAACD,QAAAA,KAAK,EAAE,CAAR;AAAWC,QAAAA,OAAO,EAAE;AAApB,OADD,EAC6B;AAACD,QAAAA,KAAK,EAAE,CAAR;AAAWC,QAAAA,OAAO,EAAE;AAApB,OAD7B,EAC0D;AAACD,QAAAA,KAAK,EAAE,CAAR;AAAWC,QAAAA,OAAO,EAAE;AAApB,OAD1D,EAEC;AAACD,QAAAA,KAAK,EAAE,CAAR;AAAWC,QAAAA,OAAO,EAAE;AAApB,OAFD,EAE6B;AAACD,QAAAA,KAAK,EAAE,CAAR;AAAWC,QAAAA,OAAO,EAAE;AAApB,OAF7B,EAE0D;AAACD,QAAAA,KAAK,EAAE,CAAR;AAAWC,QAAAA,OAAO,EAAE;AAApB,OAF1D,EAGC;AAACD,QAAAA,KAAK,EAAE,CAAR;AAAWC,QAAAA,OAAO,EAAE;AAApB,OAHD,EAG6B;AAACD,QAAAA,KAAK,EAAE,EAAR;AAAYC,QAAAA,OAAO,EAAE;AAArB,OAH7B,EAG2D;AAACD,QAAAA,KAAK,EAAE,EAAR;AAAYC,QAAAA,OAAO,EAAE;AAArB,OAH3D,EAIC;AAACD,QAAAA,KAAK,EAAE,EAAR;AAAYC,QAAAA,OAAO,EAAE;AAArB,OAJD,EAI8B;AAACD,QAAAA,KAAK,EAAE,EAAR;AAAYC,QAAAA,OAAO,EAAE;AAArB,OAJ9B,EAI4D;AAACD,QAAAA,KAAK,EAAE,EAAR;AAAYC,QAAAA,OAAO,EAAE;AAArB,OAJ5D,EAKC;AAACD,QAAAA,KAAK,EAAE,EAAR;AAAYC,QAAAA,OAAO,EAAE;AAArB,OALD,EAK8B;AAACD,QAAAA,KAAK,EAAE,EAAR;AAAYC,QAAAA,OAAO,EAAE;AAArB,OAL9B,EAK4D;AAACD,QAAAA,KAAK,EAAE,EAAR;AAAYC,QAAAA,OAAO,EAAE;AAArB,OAL5D,CADJ;AAONC,MAAAA,KAAK,EAAE,CAPD;AAQNC,MAAAA,QAAQ,EAAE,CARJ;AASNC,MAAAA,OAAO,EAAE;AATH,K;;UAkDVC,c,GAAiB,UAACC,KAAD,EAAQC,CAAR,EAAc;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKX,KAAL,CAAWC,QAAX,CAAoBQ,CAApB,EAAuBN,OAAnC;;AACA,UAAI,MAAKH,KAAL,CAAWC,QAAX,CAAoBQ,CAApB,EAAuBN,OAAvB,KAAmC,KAAvC,EAA8C;AAC5C,cAAKS,QAAL,CAAc;AAACR,UAAAA,KAAK,EAAE,MAAKJ,KAAL,CAAWI,KAAX,GAAiB;AAAzB,SAAd;;AACA,cAAKS,UAAL,CAAgBJ,CAAhB,EAAmB,IAAnB;;AACA,cAAKG,QAAL,CAAc;AAACN,UAAAA,OAAO,EAAE;AAAV,SAAd;AACD,OAJD,MAIO;AACLI,QAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;AACA,YAAI,MAAKX,KAAL,CAAWI,KAAX,GAAmB,MAAKJ,KAAL,CAAWK,QAAlC,EACE,MAAKO,QAAL,CAAc;AAACP,UAAAA,QAAQ,EAAE,MAAKL,KAAL,CAAWI;AAAtB,SAAd;;AACF,cAAKQ,QAAL,CAAc;AAACR,UAAAA,KAAK,EAAE;AAAR,SAAd;;AACA,cAAKQ,QAAL,CAAc;AAACN,UAAAA,OAAO,EAAE;AAAV,SAAd;;AACA,cAAKQ,eAAL;AACD,OAhB4B,CAkB/B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,K;;;;;;;AA7EC;wCACoB,CAClB;AACD;;;+BAEUC,E,EAAIC,c,EAAgB;AAC7B;AACA,UAAID,EAAE,KAAK,CAAC,CAAZ,EACE,CAAE,CADJ,MAEK;AACHL,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmB,KAAKX,KAAL,CAAWC,QAAX,CAAoBc,EAApB,EAAwBZ,OAA3C,GAAqD,MAArD,GAA8Da,cAA1E;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,QAAX,CAAoBgB,KAApB,CAA0B,CAA1B,EAA4BF,EAA5B,CAAZ;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,QAAX,CAAoBgB,KAApB,CAA0BF,EAAE,GAAC,CAA7B,CAAZ;AACA,aAAKH,QAAL,CAAc;AACZX,UAAAA,QAAQ,+BACF,KAAKD,KAAL,CAAWC,QAAX,CAAoBgB,KAApB,CAA0B,CAA1B,EAA4BF,EAA5B,CADE,IAELG,MAAM,CAACC,MAAP,CAAc;AAACjB,YAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,QAAX,CAAoBc,EAApB,EAAwBb,KAAhC;AAAuCC,YAAAA,OAAO,EAAEa;AAAhD,WAAd,CAFK,sBAGF,KAAKhB,KAAL,CAAWC,QAAX,CAAoBgB,KAApB,CAA0BF,EAAE,GAAC,CAA7B,CAHE;AADI,SAAd;AAOD;;AACDL,MAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;;AACA,WAAK,IAAIF,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,KAAKT,KAAL,CAAWC,QAAX,CAAoBmB,MAApC,EAA4CX,CAAC,EAA7C,EAAiD;AAC/CC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,QAAX,CAAoBQ,CAApB,EAAuBN,OAAnC;AACD;AAEF;;;sCAEe;AAChB,WAAK,IAAIM,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAC,KAAKT,KAAL,CAAWC,QAAX,CAAoBmB,MAApC,EAA4CX,CAAC,EAA7C,EAAiD;AAC/C,aAAKI,UAAL,CAAgBJ,CAAhB,EAAmB,KAAnB;AACD,OAHe,CAIhB;AACA;AACA;AACA;;AACD;;;AA2CD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;4BAEUY,C,EAAG;AACT,WAAK,IAAIZ,CAAC,GAAGY,CAAC,CAACD,MAAF,GAAW,CAAxB,EAA2BX,CAAC,GAAG,CAA/B,EAAkCA,CAAC,EAAnC,EAAuC;AACnC,YAAMa,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBhB,CAAC,GAAG,CAArB,CAAX,CAAV;AADmC,mBAEpB,CAACY,CAAC,CAACC,CAAD,CAAF,EAAOD,CAAC,CAACZ,CAAD,CAAR,CAFoB;AAElCY,QAAAA,CAAC,CAACZ,CAAD,CAFiC;AAE5BY,QAAAA,CAAC,CAACC,CAAD,CAF2B;AAGtC;;AACD,aAAOD,CAAP;AACD;;;6BAEQ;AAAA;;AACP,UAAIK,YAAY,GAAG,KAAKC,OAAL,CAAa,KAAK3B,KAAL,CAAWC,QAAxB,CAAnB,CADO,CAEP;;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oFAFF,EAKE;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,EAAE,EAAC,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKD,KAAL,CAAWM,OAAhB,CAAhD,CALF,EAME;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACU,KAAKN,KAAL,CAAWI,KADrB,kBACwC,KAAKJ,KAAL,CAAWK,QADnD,CANF,EASE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAEqB,YAAY,CAAC,CAAD,CAAZ,CAAgBxB,KAAhC;AAAuC,QAAA,cAAc,EAAE,wBAAC0B,CAAD,EAAO;AAAC,UAAA,MAAI,CAACrB,cAAL,CAAoBqB,CAApB,EAAuB,CAAvB;AAA0B,SAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,EAKE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAOE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAEF,YAAY,CAAC,CAAD,CAAZ,CAAgBxB,KAAhC;AAAuC,QAAA,cAAc,EAAE,wBAAC0B,CAAD,EAAO;AAAC,UAAA,MAAI,CAACrB,cAAL,CAAoBqB,CAApB,EAAuB,CAAvB;AAA0B,SAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAPF,EAUE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAYE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAEF,YAAY,CAAC,CAAD,CAAZ,CAAgBxB,KAAhC;AAAuC,QAAA,cAAc,EAAE,wBAAC0B,CAAD,EAAO;AAAC,UAAA,MAAI,CAACrB,cAAL,CAAoBqB,CAApB,EAAuB,CAAvB;AAA0B,SAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAZF,EAeE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,EAiBE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAEF,YAAY,CAAC,CAAD,CAAZ,CAAgBxB,KAAhC;AAAuC,QAAA,cAAc,EAAE,wBAAC0B,CAAD,EAAO;AAAC,UAAA,MAAI,CAACrB,cAAL,CAAoBqB,CAApB,EAAuB,CAAvB;AAA0B,SAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAjBF,EAoBE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBF,EAsBE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAEF,YAAY,CAAC,CAAD,CAAZ,CAAgBxB,KAAhC;AAAuC,QAAA,cAAc,EAAE,wBAAC0B,CAAD,EAAO;AAAC,UAAA,MAAI,CAACrB,cAAL,CAAoBqB,CAApB,EAAuB,CAAvB;AAA0B,SAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAtBF,EAyBE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzBF,EA2BE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAEF,YAAY,CAAC,CAAD,CAAZ,CAAgBxB,KAAhC;AAAuC,QAAA,cAAc,EAAE,wBAAC0B,CAAD,EAAO;AAAC,UAAA,MAAI,CAACrB,cAAL,CAAoBqB,CAApB,EAAuB,CAAvB;AAA0B,SAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CA3BF,EA8BE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9BF,CATF,CADF;AAsDD;;;;EAvKgB/B,S;;AA0KnB,eAAeE,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"../components/Card\";\n\nclass Game extends Component {\n  state = {\n    image_id: [{index: 0, clicked: false}, {index: 1, clicked: false} , {index: 2, clicked: false},\n               {index: 3, clicked: false}, {index: 4, clicked: false} , {index: 5, clicked: false},\n               {index: 6, clicked: false}, {index: 7, clicked: false} , {index: 8, clicked: false},\n               {index: 9, clicked: false}, {index: 10, clicked: false} , {index: 11, clicked: false},\n               {index: 12, clicked: false}, {index: 13, clicked: false} , {index: 14, clicked: false},\n               {index: 15, clicked: false}, {index: 16, clicked: false} , {index: 17, clicked: false}],\n    score: 0,\n    topScore: 0,\n    message: \"Click on image to begin!\"\n  };\n\n  // When the component mounts, load the next dog to be displayed\n  componentDidMount() {\n    //this.loadNextDog();\n  }\n\n  updateItem(id, itemAttributes) {\n    //var index = this.state.image_id.findIndex(x=> x.id === id);\n    if (id === -1)\n      {}\n    else {\n      console.log(\"Flipping from \" + this.state.image_id[id].clicked + \" to \" + itemAttributes);\n      console.log(this.state.image_id.slice(0,id));\n      console.log(this.state.image_id.slice(id+1));\n      this.setState({\n        image_id: [\n           ...this.state.image_id.slice(0,id),\n           Object.assign({index: this.state.image_id[id].index, clicked: itemAttributes}),\n           ...this.state.image_id.slice(id+1)\n        ]\n      });\n    }\n    console.log(\"this.state.image_id array looks like this now:\");\n    for (let i=0; i<this.state.image_id.length; i++) {    \n      console.log(this.state.image_id[i].clicked);\n    }\n  \n  }\n\nresetImageArray() {\n  for (let i=0; i<this.state.image_id.length; i++) {\n    this.updateItem(i, false);\n  }\n  // console.log(\"this.state.image_id array looks like this now:\");\n  // for (let i=0; i<this.state.image_id.length; i++) {    \n  //   console.log(this.state.image_id[i].clicked);\n  // }\n}\n\nhandleBtnClick = (event, i) => {\n  console.log(\"here's i:\");\n  console.log(i);\n  console.log(\"this.state.image_id[i].clicked:\")\n  console.log(this.state.image_id[i].clicked);\n  if (this.state.image_id[i].clicked === false) {    \n    this.setState({score: this.state.score+1});\n    this.updateItem(i, true);\n    this.setState({message: \"You guessed correctly!\"});\n  } else {\n    console.log(\"You clicked twice on the same image. You lost!\");\n    if (this.state.score > this.state.topScore) \n      this.setState({topScore: this.state.score});    \n    this.setState({score: 0});\n    this.setState({message: \"You clicked on this image twice. You lost!\"});\n    this.resetImageArray();\n  }\n\n//     // Get the data-value of the clicked button\n//     const btnType = event.target.attributes.getNamedItem(\"data-value\").value;\n//     // Clone this.state to the newState object\n//     // We'll modify this object and use it to set our component's state\n//     const newState = { ...this.state };\n\n//     if (btnType === \"pick\") {\n//       // Set newState.match to either true or false depending on whether or not the dog likes us (1/5 chance)\n//       newState.match = 1 === Math.floor(Math.random() * 5) + 1;\n\n//       // Set newState.matchCount equal to its current value or its current value + 1 depending on whether the dog likes us\n//       newState.matchCount = newState.match\n//         ? newState.matchCount + 1\n//         : newState.matchCount;\n//     } else {\n//       // If we thumbs down'ed the dog, we haven't matched with it\n//       newState.match = false;\n//     }\n//     // Replace our component's state with newState, load the next dog image\n//     this.setState(newState);\n//     this.loadNextDog();\n};\n\n//   loadNextDog = () => {\n//     API.getRandomDog()\n//       .then(res =>\n//         this.setState({\n//           image: res.data.message\n//         })\n//       )\n//       .catch(err => console.log(err));\n//   };\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n\n  render() {\n    var new_image_id = this.shuffle(this.state.image_id);\n    //this.setState({image_id: new_image_id});\n    return (\n      <div>\n        <h1 className=\"text-center\">Clicky Game!</h1>\n        <h3 className=\"text-center\">\n        Click on an image to earn points, but don't click on any more than once!   \n        </h3>\n        <div className=\"text-center\" id=\"messaging_div\"><h3>{this.state.message}</h3></div> \n        <h1 className=\"text-center\">\n          Score: {this.state.score} Top score: {this.state.topScore}\n        </h1>\n        <div className=\"row\">\n\n          <div className=\"col-xs-1\">\n            <Card image_id={new_image_id[0].index} handleBtnClick={(e) => {this.handleBtnClick(e, 0)}} />\n          </div>\n          <div className=\"col-xs-1\">\n          </div>\n          <div className=\"col-xs-1\">\n            <Card image_id={new_image_id[1].index} handleBtnClick={(e) => {this.handleBtnClick(e, 1)}} />\n          </div>\n          <div className=\"col-xs-1\">\n          </div>\n          <div className=\"col-xs-1\">\n            <Card image_id={new_image_id[2].index} handleBtnClick={(e) => {this.handleBtnClick(e, 2)}} />\n          </div>\n          <div className=\"col-xs-1\">\n          </div>\n          <div className=\"col-xs-1\">\n            <Card image_id={new_image_id[3].index} handleBtnClick={(e) => {this.handleBtnClick(e, 3)}} />\n          </div>\n          <div className=\"col-xs-1\">\n          </div>\n          <div className=\"col-xs-1\">\n            <Card image_id={new_image_id[4].index} handleBtnClick={(e) => {this.handleBtnClick(e, 4)}} />\n          </div>\n          <div className=\"col-xs-1\">\n          </div>\n          <div className=\"col-xs-1\">\n            <Card image_id={new_image_id[5].index} handleBtnClick={(e) => {this.handleBtnClick(e, 5)}} />\n          </div>\n          <div className=\"col-xs-1\">\n          </div>\n        </div>\n        {/* <row>\n        <Card image={this.state.image} handleBtnClick={this.handleBtnClick} />\n        <Card image={this.state.image} handleBtnClick={this.handleBtnClick} />\n        </row>\n        <br/>\n        <Card image={this.state.image} handleBtnClick={this.handleBtnClick} /> */}\n        {/* <Alert style={{ opacity: this.state.match ? 1 : 0 }} type=\"success\">\n          Yay! That Pup Liked You Too!!!\n        </Alert> */}\n      </div>\n    );\n  }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}