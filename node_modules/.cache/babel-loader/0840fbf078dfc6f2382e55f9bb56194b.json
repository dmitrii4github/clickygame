{"ast":null,"code":"import _classCallCheck from \"/Users/dzakharov/Desktop/code/clickygame/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dzakharov/Desktop/code/clickygame/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dzakharov/Desktop/code/clickygame/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dzakharov/Desktop/code/clickygame/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dzakharov/Desktop/code/clickygame/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/dzakharov/Desktop/code/clickygame/src/pages/Game.js\";\nimport React, { Component } from \"react\";\nimport Card from \"../components/Card\";\n\nvar Game =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Game, _Component);\n\n  function Game() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Game)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      image_id: [{\n        index: 0,\n        clicked: false\n      }, {\n        index: 1,\n        clicked: false\n      }, {\n        index: 2,\n        clicked: false\n      }],\n      match: false,\n      score: 0,\n      topScore: 0\n    };\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"componentDidMount\",\n    // When the component mounts, load the next dog to be displayed\n    value: function componentDidMount() {} //this.loadNextDog();\n    //   handleBtnClick = event => {\n    //     // Get the data-value of the clicked button\n    //     const btnType = event.target.attributes.getNamedItem(\"data-value\").value;\n    //     // Clone this.state to the newState object\n    //     // We'll modify this object and use it to set our component's state\n    //     const newState = { ...this.state };\n    //     if (btnType === \"pick\") {\n    //       // Set newState.match to either true or false depending on whether or not the dog likes us (1/5 chance)\n    //       newState.match = 1 === Math.floor(Math.random() * 5) + 1;\n    //       // Set newState.matchCount equal to its current value or its current value + 1 depending on whether the dog likes us\n    //       newState.matchCount = newState.match\n    //         ? newState.matchCount + 1\n    //         : newState.matchCount;\n    //     } else {\n    //       // If we thumbs down'ed the dog, we haven't matched with it\n    //       newState.match = false;\n    //     }\n    //     // Replace our component's state with newState, load the next dog image\n    //     this.setState(newState);\n    //     this.loadNextDog();\n    //   };\n    //   loadNextDog = () => {\n    //     API.getRandomDog()\n    //       .then(res =>\n    //         this.setState({\n    //           image: res.data.message\n    //         })\n    //       )\n    //       .catch(err => console.log(err));\n    //   };\n\n  }, {\n    key: \"shuffle\",\n    value: function shuffle(a) {\n      for (var i = a.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var _ref = [a[j], a[i]];\n        a[i] = _ref[0];\n        a[j] = _ref[1];\n      }\n\n      return a;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var new_image_id = this.shuffle(this.state.image_id); //this.setState({image_id: new_image_id});\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Clicky Game!\"), React.createElement(\"h3\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Click on an image to earn points, but don't click on any more than once!\"), React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Score: \", this.state.score, \" Top score: \", this.state.topScore), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Card, {\n        image_id: new_image_id[0][0],\n        handleBtnClick: this.handleBtnClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-xs-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-xs-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Card, {\n        image_id: new_image_id[0][1],\n        handleBtnClick: this.handleBtnClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-xs-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-xs-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Card, {\n        image_id: new_image_id[0][2],\n        handleBtnClick: this.handleBtnClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-xs-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Game;\n}(Component);\n\nexport default Game;","map":{"version":3,"sources":["/Users/dzakharov/Desktop/code/clickygame/src/pages/Game.js"],"names":["React","Component","Card","Game","state","image_id","index","clicked","match","score","topScore","a","i","length","j","Math","floor","random","new_image_id","shuffle","handleBtnClick"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"../components/Card\";\n\nclass Game extends Component {\n  state = {\n    image_id: [{index: 0, clicked: false}, {index: 1, clicked: false} , {index: 2, clicked: false}],\n    match: false,\n    score: 0,\n    topScore: 0\n  };\n\n  // When the component mounts, load the next dog to be displayed\n  componentDidMount() {\n    //this.loadNextDog();\n  }\n\n//   handleBtnClick = event => {\n//     // Get the data-value of the clicked button\n//     const btnType = event.target.attributes.getNamedItem(\"data-value\").value;\n//     // Clone this.state to the newState object\n//     // We'll modify this object and use it to set our component's state\n//     const newState = { ...this.state };\n\n//     if (btnType === \"pick\") {\n//       // Set newState.match to either true or false depending on whether or not the dog likes us (1/5 chance)\n//       newState.match = 1 === Math.floor(Math.random() * 5) + 1;\n\n//       // Set newState.matchCount equal to its current value or its current value + 1 depending on whether the dog likes us\n//       newState.matchCount = newState.match\n//         ? newState.matchCount + 1\n//         : newState.matchCount;\n//     } else {\n//       // If we thumbs down'ed the dog, we haven't matched with it\n//       newState.match = false;\n//     }\n//     // Replace our component's state with newState, load the next dog image\n//     this.setState(newState);\n//     this.loadNextDog();\n//   };\n\n//   loadNextDog = () => {\n//     API.getRandomDog()\n//       .then(res =>\n//         this.setState({\n//           image: res.data.message\n//         })\n//       )\n//       .catch(err => console.log(err));\n//   };\n\n  shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n\n  render() {\n    var new_image_id = this.shuffle(this.state.image_id);\n    //this.setState({image_id: new_image_id});\n    return (\n      <div>\n        <h1 className=\"text-center\">Clicky Game!</h1>\n        <h3 className=\"text-center\">\n        Click on an image to earn points, but don't click on any more than once!   \n        </h3>\n        <h1 className=\"text-center\">\n          Score: {this.state.score} Top score: {this.state.topScore}\n        </h1>\n        <div className=\"row\">\n\n          <div className=\"col-xs-2\">\n            <Card image_id={new_image_id[0][0]} handleBtnClick={this.handleBtnClick} />\n          </div>\n          <div className=\"col-xs-2\">\n          </div>\n          <div className=\"col-xs-2\">\n            <Card image_id={new_image_id[0][1]} handleBtnClick={this.handleBtnClick} />\n          </div>\n          <div className=\"col-xs-2\">\n          </div>\n          <div className=\"col-xs-2\">\n            <Card image_id={new_image_id[0][2]} handleBtnClick={this.handleBtnClick} />\n          </div>\n          <div className=\"col-xs-2\">\n          </div>\n        </div>\n        {/* <row>\n        <Card image={this.state.image} handleBtnClick={this.handleBtnClick} />\n        <Card image={this.state.image} handleBtnClick={this.handleBtnClick} />\n        </row>\n        <br/>\n        <Card image={this.state.image} handleBtnClick={this.handleBtnClick} /> */}\n        {/* <Alert style={{ opacity: this.state.match ? 1 : 0 }} type=\"success\">\n          Yay! That Pup Liked You Too!!!\n        </Alert> */}\n      </div>\n    );\n  }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}